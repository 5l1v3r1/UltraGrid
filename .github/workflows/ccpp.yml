name: C/C++ CI

on:
  push:
    branches:
      - ci
      - master
      - devel
    paths:
      - '.github/scripts/**'
      - '.github/workflows/ccpp.yml'
      - '**.c'
      - '**.cpp'
      - '**.cu'
      - '**.h'
      - '**.hpp'
      - '**.m'
      - '**.mm'
      - 'autogen.sh'
      - 'configure.ac'
      - 'data/scripts/**.sh'
      - 'Makefile.in'

jobs:
  Ubuntu:
    if: github.repository == 'CESNET/UltraGrid' || github.repository == 'MartinPulec/UltraGrid'
    name: run Ubuntu
    runs-on: ubuntu-latest
    env:
      sdk_pass: ${{ secrets.sdk_pass }}

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: bootstrap
      run: .github/scripts/Linux/prepare.sh
    - name: Cache static Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: /usr/local/qt
        key: cache-qt-5_13_2-${{ runner.os }}
    - name: Build static Qt
      if: steps.cache-qt.outputs.cache-hit != 'true'
      run: .github/scripts/build-qt.sh 5.13.2
    - name: configure
      run: ./autogen.sh --enable-qt --enable-static-qt --with-cuda-host-compiler=gcc-6 --enable-plugins --with-live555=/usr/local
    - name: make
      run: make
    - name: make check
      run: make check
    - name: make distcheck
      run: make distcheck
    - name: AppImage
      run: APPIMAGE=`data/scripts/Linux-AppImage/create-appimage.sh` && mkdir UltraGrid-CI-Linux && mv $APPIMAGE UltraGrid-CI-Linux
    - name: Upload build
      uses: actions/upload-artifact@v1
      with:
        name: UltraGrid CI Linux build
        path: UltraGrid-CI-Linux

  macOS:
    if: github.repository == 'CESNET/UltraGrid' || github.repository == 'MartinPulec/UltraGrid'
    name: run macOS
    runs-on: macos-latest
    env:
      sdk_pass: ${{ secrets.sdk_pass }}

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: bootstrap
      run: .github/scripts/macOS/prepare.sh
    - name: configure
      run: ./autogen.sh --enable-qt --with-live555=/usr/local
    - name: make
      run: make osx-gui-dmg
    - name: make check
      run: make check
    - name: make distcheck
      run: make distcheck
    - name: Upload build
      uses: actions/upload-artifact@v1
      with:
        name: UltraGrid CI macOS build
        path: UltraGrid.dmg

  Windows:
    if: github.repository == 'CESNET/UltraGrid' || github.repository == 'MartinPulec/UltraGrid'
    name: run Windows
    runs-on: windows-latest
    env:
      sdk_pass: ${{ secrets.sdk_pass }}
    
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: Find MSVC
      run: .github/scripts/Windows/find_msvc.ps1
    - name: bootsrap
      run: .github/scripts/Windows/prepare.ps1
    - name: bootsrap MSYS2
      run: C:\msys64\usr\bin\bash -lc '$GITHUB_WORKSPACE/.github/scripts/Windows/prepare_msys.sh'
    - name: configure
      run: C:\msys64\usr\bin\bash -lc "./autogen.sh --enable-qt --disable-ndi --with-live555=/usr/local"
    - name: make
      run: C:\msys64\usr\bin\bash -lc "make"
    - name: make check
      run: C:\msys64\usr\bin\bash -lc "make check"
    - name: make dist-check
      run: C:\msys64\usr\bin\bash -lc "make distcheck"
    - name: add DLL depends
      run: |
        C:\msys64\usr\bin\bash -lc 'cp gui/QT/uv-qt.exe bin'
        C:\msys64\usr\bin\bash -lc 'rm bin/run_tests.exe; IFS=\"|\"; for exe in bin/*exe; do for n in `data/scripts/get_dll_depends.sh \"$exe\" | tr \"\n\" \"|\"`; do cp \"$n\" bin; done; done'
        C:\msys64\usr\bin\bash -lc 'windeployqt bin/uv-qt.exe'
        C:\msys64\usr\bin\bash -lc 'mv bin UltraGrid-CI-Win'
    - name: Upload build
      uses: actions/upload-artifact@v1
      with:
        name: UltraGrid CI Windows build
        path: UltraGrid-CI-Win

# vi: set expandtab sw=2:
